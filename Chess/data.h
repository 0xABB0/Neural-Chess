#pragma once
#include "macros.h"

const std::string piece_names[6] = { "Pawn", "Rook", "Knight", "Bishop", "Queen", "King" };
const char piece_initials[2][6] = { { 'P','R','N','B','Q','K' },{ 'p','r','n','b','q','k' } };

const std::string neural_net_location = "NeuralNet/net0.xml";

//All the rows from top to bottom
const BB row_mask[8] = {
	(BB)0b0000000000000000000000000000000000000000000000000000000011111111,
	(BB)0b0000000000000000000000000000000000000000000000001111111100000000,
	(BB)0b0000000000000000000000000000000000000000111111110000000000000000,
	(BB)0b0000000000000000000000000000000011111111000000000000000000000000,
	(BB)0b0000000000000000000000001111111100000000000000000000000000000000,
	(BB)0b0000000000000000111111110000000000000000000000000000000000000000,
	(BB)0b0000000011111111000000000000000000000000000000000000000000000000,
	(BB)0b1111111100000000000000000000000000000000000000000000000000000000
};

//All the columns from right to left
const BB column_mask[8] = {
	(BB)0b0000000100000001000000010000000100000001000000010000000100000001,
	(BB)0b0000001000000010000000100000001000000010000000100000001000000010,
	(BB)0b0000010000000100000001000000010000000100000001000000010000000100,
	(BB)0b0000100000001000000010000000100000001000000010000000100000001000,
	(BB)0b0001000000010000000100000001000000010000000100000001000000010000,
	(BB)0b0010000000100000001000000010000000100000001000000010000000100000,
	(BB)0b0100000001000000010000000100000001000000010000000100000001000000,
	(BB)0b1000000010000000100000001000000010000000100000001000000010000000,
};

//All the diagonals from bottom right to top left
const BB diagonal_mask[15] = {
	(BB)0b0000000000000000000000000000000000000000000000000000000000000001,
	(BB)0b0000000000000000000000000000000000000000000000000000000100000010,
	(BB)0b0000000000000000000000000000000000000000000000010000001000000100,
	(BB)0b0000000000000000000000000000000000000001000000100000010000001000,
	(BB)0b0000000000000000000000000000000100000010000001000000100000010000,
	(BB)0b0000000000000000000000010000001000000100000010000001000000100000,
	(BB)0b0000000000000001000000100000010000001000000100000010000001000000,
	(BB)0b0000000100000010000001000000100000010000001000000100000010000000,
	(BB)0b0000001000000100000010000001000000100000010000001000000000000000,
	(BB)0b0000010000001000000100000010000001000000100000000000000000000000,
	(BB)0b0000100000010000001000000100000010000000000000000000000000000000,
	(BB)0b0001000000100000010000001000000000000000000000000000000000000000,
	(BB)0b1000000001000000100000000000000000000000000000000000000000000000,
	(BB)0b0100000010000000000000000000000000000000000000000000000000000000,
	(BB)0b1000000000000000000000000000000000000000000000000000000000000000
};

//All the diagonals from bottom left to top right
const BB antidiagonal_mask[15] = {
	(BB)0b0000000000000000000000000000000000000000000000000000000010000000,
	(BB)0b0000000000000000000000000000000000000000000000001000000001000000,
	(BB)0b0000000000000000000000000000000000000000100000000100000000100000,
	(BB)0b0000000000000000000000000000000010000000010000000010000000010000,
	(BB)0b0000000000000000000000001000000001000000001000000001000000001000,
	(BB)0b0000000000000000100000000100000000100000000100000000100000000100,
	(BB)0b0000000010000000010000000010000000010000000010000000010000000010,
	(BB)0b1000000001000000001000000001000000001000000001000000001000000001,
	(BB)0b0100000000100000000100000000100000000100000000100000000100000000,
	(BB)0b0010000000010000000010000000010000000010000000010000000000000000,
	(BB)0b0001000000001000000001000000001000000001000000000000000000000000,
	(BB)0b0000100000000100000000100000000100000000000000000000000000000000,
	(BB)0b0000010000000010000000010000000000000000000000000000000000000000,
	(BB)0b0000001000000001000000000000000000000000000000000000000000000000,
	(BB)0b0000000100000000000000000000000000000000000000000000000000000000
};


const BB ROWCLEAR[] = {
	(BB)0b1111111111111111111111111111111111111111111111111111111100000000,
	(BB)0b1111111111111111111111111111111111111111111111110000000011111111,
	(BB)0b1111111111111111111111111111111111111111000000001111111111111111,
	(BB)0b1111111111111111111111111111111100000000111111111111111111111111,
	(BB)0b1111111111111111111111110000000011111111111111111111111111111111,
	(BB)0b1111111111111111000000001111111111111111111111111111111111111111,
	(BB)0b1111111100000000111111111111111111111111111111111111111111111111,
	(BB)0b0000000011111111111111111111111111111111111111111111111111111111
};

const BB column_zero[] = {
	(BB)0b1111111011111110111111101111111011111110111111101111111011111110,
	(BB)0b1111110111111101111111011111110111111101111111011111110111111101,
	(BB)0b1111101111111011111110111111101111111011111110111111101111111011,
	(BB)0b1111011111110111111101111111011111110111111101111111011111110111,
	(BB)0b1110111111101111111011111110111111101111111011111110111111101111,
	(BB)0b1101111111011111110111111101111111011111110111111101111111011111,
	(BB)0b1011111110111111101111111011111110111111101111111011111110111111,
	(BB)0b0111111101111111011111110111111101111111011111110111111101111111,
};

const BB starting_positions[2][6] = {
	{
		(BB)0b0000000000000000000000000000000000000000000000001111111100000000,
		(BB)0b0000000000000000000000000000000000000000000000000000000010000001,
		(BB)0b0000000000000000000000000000000000000000000000000000000001000010,
		(BB)0b0000000000000000000000000000000000000000000000000000000000100100,
		(BB)0b0000000000000000000000000000000000000000000000000000000000001000,
		(BB)0b0000000000000000000000000000000000000000000000000000000000010000
	},
 {
	 (BB)0b0000000011111111000000000000000000000000000000000000000000000000,
	 (BB)0b1000000100000000000000000000000000000000000000000000000000000000,
	 (BB)0b0100001000000000000000000000000000000000000000000000000000000000,
	 (BB)0b0010010000000000000000000000000000000000000000000000000000000000,
	 (BB)0b0000100000000000000000000000000000000000000000000000000000000000,
	 (BB)0b0001000000000000000000000000000000000000000000000000000000000000
 }
};

const short int support_starting_positions[64] = { 1,2,3,4,5,3,2,1,0,0,0,0,0,0,0,0,-1,-1,-1,-1,-1,-1,-1,-1 ,-1,-1,-1,-1,-1,-1,-1,-1 ,-1,-1,-1,-1,-1,-1,-1,-1 ,-1,-1,-1,-1,-1,-1,-1,-1,0,0,0,0,0,0,0,0,1,2,3,4,5,3,2,1 };

const BB white_start_all = 0b0000000000000000000000000000000000000000000000001111111111111111;
const BB black_start_all = 0b1111111111111111000000000000000000000000000000000000000000000000;

const BB Knight_Lookup_Table[64] = {
	132096, 329728, 659712, 1319424, 2638848, 5277696, 10489856, 4202496,
	33816580, 84410376, 168886289, 337772578, 675545156, 1351090312, 2685403152LL, 1075839008LL,
	8657044482, 21609056261, 43234889994, 86469779988, 172939559976, 345879119952, 687463207072, 275414786112,
	2216203387392, 5531918402816, 11068131838464, 22136263676928, 44272527353856, 88545054707712, 175990581010432, 70506185244672,
	567348067172352, 1416171111120896, 2833441750646784, 5666883501293568, 11333767002587136, 22667534005174272, 45053588738670592, 18049583422636032,
	145241105196122112, 362539804446949376, 725361088165576704, 1450722176331153408, 2901444352662306816, 5802888705324613632, 11533718717099671552ULL, 4620693356194824192,
	288234782788157440, 576469569871282176, 1224997833292120064, 2449995666584240128, 4899991333168480256, 9799982666336960512ULL, 1152939783987658752, 2305878468463689728,
	1128098930098176, 2257297371824128, 4796069720358912, 9592139440717824, 19184278881435648, 38368557762871296, 4679521487814656, 9077567998918656

};

const BB King_Lookup_Table[64] = {
	770, 1797, 3594, 7188, 14376, 28752, 57504, 49216,
	197123, 460039, 920078, 1840156, 3680312, 7360624, 14721248, 12599488,
	50463488, 117769984, 235539968, 471079936, 942159872, 1884319744, 3768639488LL, 3225468928LL,
	12918652928, 30149115904, 60298231808, 120596463616, 241192927232, 482385854464, 964771708928, 825720045568,
	3307175149568, 7718173671424, 15436347342848, 30872694685696, 61745389371392, 123490778742784, 246981557485568, 211384331665408,
	846636838289408, 1975852459884544, 3951704919769088, 7903409839538176, 15806819679076352, 31613639358152704, 63227278716305408, 54114388906344448,
	216739030602088448, 505818229730443264, 1011636459460886528, 2023272918921773056, 4046545837843546112, 8093091675687092224, 16186183351374184448ULL, 13853283560024178688ULL,
	144959613005987840, 362258295026614272, 724516590053228544, 1449033180106457088, 2898066360212914176, 5796132720425828352, 11592265440851656704ULL, 4665729213955833856
};
